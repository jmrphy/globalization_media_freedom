}
for(i in pagenumber){
mat[i,1]<-paste(starturl,i,endurl, sep="")
}
iterations = 450
variables = 1
mat <- matrix(ncol=variables, nrow=iterations)
for(i in pagenumber){
mat[i,1]<-paste(starturl,i,endurl, sep="")
}
for(i in pagenumber){
mat[i,1]<-paste(starturl,i,endurl, sep="")
}
for(i in pagenumber){
paste(starturl,i,endurl, sep="")
}
for(i in pagenumber){
print(paste(starturl,i,endurl, sep=""))
}
df<-as.data.frame(1580)
df<-data.frame()
for(i in pagenumber){
df<-rbind(print(paste(starturl,i,endurl, sep="")))
}
View(df)
?for
()
for(x in pagenumber){
df<-rbind(print(paste(starturl,i,endurl, sep="")))
}
for(i in pagenumber){
df[i,]<-as.factor((paste(starturl,i,endurl, sep="")))
}
df <- matrix(nrow=450, ncol=1)
for(i in pagenumber){
df[i,]<-as.factor((paste(starturl,i,endurl, sep="")))
}
pagenumber
for(i in pagenumber){
for (x in 1:449){
df[x,]<-as.factor((paste(starturl,i,endurl, sep="")))
}
}
head(df)
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-paste(starturl,i,endurl, sep="")))
}
}
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-paste(starturl,i,endurl, sep="")))
}
}
df <- matrix(nrow=450, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-paste(starturl,i,endurl, sep="")))
}
}
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-paste(starturl,i,endurl, sep=""))
}}
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-paste(starturl,i,endurl, sep="")
}}
View(df)
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-print(paste(starturl,i,endurl, sep=""))
}}
head(df)
df <- matrix(nrow=449, ncol=1)
for(i in 1:pagenumber){
for (x in 1:449){
df[x,]<-paste(starturl,i,endurl, sep=""))
}}
df <- matrix(nrow=449, ncol=1)
for(i in 1:pagenumber){
for (x in 1:449){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
for (x in 1:449){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
head(df)
d <- matrix(nrow=20, ncol=3)
for (i in 1:20) { d[i,] <- c(i+i, i*i, i/1)}
View(d)
c(paste(starturl,i,endurl, sep=""))
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
df[i,]<-c(paste(starturl,i,endurl, sep=""))
}}
df <- matrix(nrow=449, ncol=1)
for(i in pagenumber){
df[i,]<-c(paste(starturl,i,endurl, sep=""))
}
for(i in 1:length[pagenumber]){
df[i,]<-c(paste(starturl,i,endurl, sep=""))
}
df <- matrix(nrow=449, ncol=1)
View(df)
df <- matrix(nrow=449, ncol=1)
for (x in 1:449){
for(i in pagenumber){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
View(df)
df <- matrix(nrow=449, ncol=1)
for (x in 1:length[pagenumber]){
for(i in pagenumber){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
df <- as.data.frame(matrix(nrow=449, ncol=1))
View(df)
for (x in 1:length[pagenumber]){
for(i in pagenumber){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
df <- as.data.frame(matrix(nrow=449, ncol=1))
for (x in 1:length(pagenumber){
for(i in pagenumber){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
df <- as.data.frame(matrix(nrow=449, ncol=1))
for (x in 1:length(pagenumber)){
for(i in pagenumber){
df[x,]<-c(paste(starturl,i,endurl, sep=""))
}}
View(df)
seq(from=0, to=4485, by=10)
startstring<-"http://begin.com/page"
variableterm<-seq(from=0, to=4485, by=10)
endstring<-"/index.html"
df <- as.data.frame(matrix(nrow=449, ncol=1))
for (x in 1:length(variableterm)){
for(i in variableterm){
df[x,]<-c(paste(startstring,i,endstring, sep=""))
}}
View(df)
wage1<-"http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=0&x=17&y=13&query=wage&exactW=&where=text"
wage2<-"http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=10&x=17&y=13&query=wage&exactW=&where=text"
wage3<-"http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=20&x=17&y=13&query=wage&exactW=&where=text"
?grep
wage1<-"http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=0&x=17&y=13&query=wage&exactW=&where=text"
wage2<-"http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=10&x=17&y=13&query=wage&exactW=&where=text"
wage3<-"http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=20&x=17&y=13&query=wage&exactW=&where=text"
page1 = readLines(wage1)
page2 = readLines(wage2)
page3 = readLines(wage3)
grep('Archived at',page1)
grep('Archived at',page2)
grep('Archived at',page3)
items<-page1[grep('Archived at',page1)]
items<-page2[grep('Archived at',page2)]
items1<-page1[grep('Archived at',page1)]
items2<-page2[grep('Archived at',page2)]
items3<-page3[grep('Archived at',page3)]
mypattern = 'Archived at: ([^<]*)</span>'
datalines1 = grep(mypattern,items1,value=TRUE)
datalines2 = grep(mypattern,items2,value=TRUE)
datalines3 = grep(mypattern,items3,value=TRUE)
datalines4 = grep(mypattern,items4,value=TRUE)
datalines1
?rbind
datalines<-rbind(datalines1,datalines2,datalines3)
View(datalines)
datalines<-cbind(datalines1,datalines2,datalines3)
View(datalines)
?stack
datalines<-stack(datalines1,datalines2,datalines3)
datalines<-data.frame(datalines1,datalines2,datalines3)
View(datalines)
datalines <- stack(lapply(datalines,as.character))
View(datalines)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,datalines)
matches = mapply(getexpr,datalines,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result
fix(datalines1)
datalines<-paste(datalines1,datalines2,datalines3)
fix(datalines)
datalines<-paste(datalines1,datalines2,datalines3, sep="'")
datalines
datalines1
datalines<-datalines1+datalines2+datalines3
datalines<-data.frame(datalines1,datalines2,datalines3, stringsAsFactors=FALSE)
datalines <- stack(lapply(datalines,as.character))
View(datalines)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,datalines)
matches = mapply(getexpr,datalines,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result
View(datalines)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,datalines$values)
matches = mapply(getexpr,datalines,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result
View(datalines)
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,datalines$values)
matches = mapply(getexpr,datalines$values,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result
?sprintf
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=wage&exactW=&where=text", seq(0, 4490, 10))
urls
N <- 4500  # some magic number, possibly an overestimate
DF <- data.frame(num=rep(NA, N), txt=rep("", N),  # as many cols as you need
stringsAsFactors=FALSE)
DF <- data.frame(num=rep(NA, N),  # as many cols as you need
stringsAsFactors=FALSE)
for(i in 1:449){
df[i, ] <- sapply(urls, function(x) readLines(x))
}
urls[1,]
urls[,1]
urls[1]
urls[2]
for(i in 1:449){
df[i, ] <- readLines(urls[i])
}
for(i in 1:450){
df[i, ] <- readLines(urls[i])
}
for(i in 1:450){
results_wage <- readLines(urls[i])
}
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=wage&exactW=&where=text", seq(0, 50, 10))
N <- 60
df <- data.frame(num=rep(NA, N), stringsAsFactors=FALSE)
?lapply
for(i in 1:50){
df[i,] <- readLines(urls[i])
}
for(i in 1:50){
df <- readLines(urls[i])
}
fix(urls)
results_wage<-as.character(seq(450))
for(i in 1:50){
results_wage[i] <- readLines(urls[i])
}
results_wage<-as.character(seq(6))
for(i in 1:6){
results_wage[i] <- readLines(urls[i])
}
for(i in 1:length(variableterm)){
df[i,]<-paste(startstring,variableterm[i],endstring, sep="")
}
for(i in length(urls){
DF[i,] <- readLines(urls[i])
}
for(i in length(urls){
readLines(urls[i])
}
for(i in 1:length(urls){
readLines(urls[i])
}
for(i in 1:length(urls){
lapply(urls, function(x) readLines(x)
}
for(i in 1:length(urls)){
lapply(urls, function(x) readLines(x)
}
for(i in 1:length(urls)){
lapply(urls, function(x) readLines(x))
}
for(i in 1:length(urls)){
DF<-lapply(urls, function(x) readLines(x))
}
DF
DF[1]
DF[2]
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=wage&exactW=&where=text", seq(0, 4480, 10))
?sprintf
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", seq(0, 4480, 10), "wage")
head(urls)
searchterm<-"wage"
totalresults<-"4485"
pages<-seq(0, totalresults, 10)
pages<-seq(0, as.numeric(totalresults), 10)
pages<-seq(0, as.character(totalresults), 10)
searchterm<-"wage"
totalresults<-"4485"
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", seq(0, as.character(totalresults), 10), "wage")
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", seq(0, as.numeric(totalresults), 10), "wage")
pages<-seq(0, as.numeric(totalresults), 10)
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", pages, "wage")
head(urls)
for(i in 1:length(urls)){
DF<-lapply(urls, function(x) readLines(x))
}
DF[1]
DF[50]
DF[400]
df[30]
DF[30]
urls
totalresults<-"100"
pages<-seq(0, as.numeric(totalresults), 10)
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", seq(0, 4480, 10), "wage")
for(i in 1:length(urls)){
DF<-lapply(urls, function(x) readLines(x))
}
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", pages, searchterm)
for(i in 1:length(urls)){
DF<-lapply(urls, function(x) readLines(x))
}
DF[9]
searchterm<-"wage"
totalresults<-"200"
pages<-seq(0, as.numeric(totalresults), 10)
urls<-sprintf("http://webarchive.nationalarchives.gov.uk/search/?lang=en&noneW=&format=all&department_id_51=on&department_id_56=on&site=number10.gov.uk&department_id_54=on&search_type=website&start=%s&x=17&y=13&query=%s&exactW=&where=text", pages, searchterm)
for(i in 1:length(urls)){
DF<-lapply(urls, function(x) readLines(x))
}
grep('Archived at',DF)
?lapply
lapply(DF, function(x) grep('Archived at',x))
lapply(DF, function(x) grep('Archived at',x), simplify=TRUE)
lapply(DF, function(x) grep('Archived at',x))
items<-lapply(DF, function(x) grep('Archived at',x))
datelines<-lapply(DF, function(x) grep('Archived at',x))
items<-DF[grep('Archived at',DF[items])]
DF[datelines]
DF[,datelines]
DF[[datelines]]
DF[[,datelines]]
DF[datelines,]
df<-unlist(DF)
grep('Archived at',df)
datelines<-df[grep('Archived at',df)]
datelines<-df[grep('Archived at',df)] ### Select only lines in html containing "Archived at"
findlines<-df[grep('Archived at',df)] ### Select only lines in html containing "Archived at"
foundlines<-df[grep('Archived at',df)] ### Select only lines in html containing "Archived at"
mypattern = 'Archived at: ([^<]*)</span>' # Define a pattern to identify dates
datelines = grep(mypattern,foundlines,value=TRUE)
datelines
getexpr = function(s,g)substring(s,g,g+attr(g,'match.length')-1)
gg = gregexpr(mypattern,datelines)
matches = mapply(getexpr,datelines,gg)
result = gsub(mypattern,'\\1',matches)
names(result) = NULL
result
data <- as.data.frame(matrix(result,ncol=1,byrow=TRUE))
names(data) = c('date')
head(data)
require(lubridate)
?guess_formats
guess_formats(data$date, print_matches = TRUE)
guess_formats(data$date, order="1979-05-27 05:00:59" print_matches = TRUE)
data$year<-year(data$date)
date$year
data$year
summary(data$year)
summary(as.factor(data$year))
counts(as.factor(data$year))
count(as.factor(data$year))
table(as.factor(data$year))
timeseries<-table(as.factor(data$year))
timeseries<-as.data.frame(as.factor(data$year))
timeseries
timeseries<-as.data.frame(table(as.factor(data$year)))
View(timeseries)
View(timeseries)
View(timeseries)
require(ggplot2)
View(timeseries)
summary(timeseries$Freq)
summary(timeseries$Var1)
timeseries<-as.data.frame(table(data$year))
View(timeseries)
summary(timeseries$Var1)
data$year<-year(data$date)
timeseries<-as.data.frame(table(data$year))
View(timeseries)
summary(timeseries$Var1)
timeseries<-as.data.frame(table(as.numeric(data$year)))
summary(timeseries$Var1)
data$year<-year(data$date)
timeseries<-as.data.frame(table(as.numeric(data$year)))
summary(timeseries$Var1)
qplot(as.numeric(timeseries$Var1), timeseries$Freq)
qplot(timeseries$Var1, timeseries$Freq)
?qplot
qplot(timeseries$Var1, timeseries$Freq, geom="line") + theme_bw()
qplot(timeseries$Var1, timeseries$Freq, geom="line")
?qplot
qplot(timeseries$Var1, timeseries$Freq) + geom(line)
qplot(timeseries$Var1, timeseries$Freq) + geom_line() + theme_bw()
View(timeseries)
qplot(as.numeric(timeseries$Var1), timeseries$Freq) + geom_line() + theme_bw()
qplot(as.integer(timeseries$Var1), timeseries$Freq) + geom_line() + theme_bw()
?qplot
?geom_line
?qplot
qplot(Var1, Freq, data=timeseries) + geom_line() + theme_bw()
qplot(Var1, Freq, data=timeseries) + geom_line() + theme_bw()
?geom_line
qplot(Var1, Freq, data=timeseries) + geom_line(aes(Var1, Freq, data=timeseries)) + theme_bw()
?geom_line
data$year<-as.Date(data$year)
qplot(Var1, Freq, data=timeseries, geom="line") + theme_bw()
?lubridate
data$year<-year(data$date)
timeseries<-as.data.frame(table(data$year))
timeseries$year<-year(timeseries$year)
View(timeseries)
timeseries$year<-year(as.numeric(timeseries$year))
timeseries<-as.data.frame(table(data$date))
View(timeseries)
?as.Date
data$year<-year(data$date)
data$year<-as.Date(data$year)
timeseries<-as.data.frame(table(data$year))
data$year<-year(data$date)
timeseries<-as.data.frame(table(data$year))
View(timeseries)
timeseries$Year<-as.Date(timeseries$Var1, "%Y")
qplot(Year, Freq, data=timeseries, geom="line") + theme_bw()
?qplot
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of \"wage\" in Archive of Prime Minister's Website) + theme_bw()
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of /"wage/" in Archive of Prime Minister's Website) + theme_bw()
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of "wage" in Archive of Prime Minister's Website) + theme_bw()
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of "wage" in Archive of Prime Minister's Website") + theme_bw()
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of "\wage\" in Archive of Prime Minister's Website") + theme_bw()
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of \"wage\" in Archive of Prime Minister's Website") + theme_bw()
qplot(Year, Freq, data=timeseries, geom="line", main="Frequency of \"wage\" in National Archive of Prime Minister's Website") + theme_bw()
library(slidify)
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
require(slidify)
require(slidify)
?alarm
\a
"\a"
library(devtools)
install_github("pingr", "rasmusab")
?ping
??ping
ping("yes")
require(pingr)
?ping
ping("test")
ping("test", sound="coing")
ping("test", sound="coin")
ping("test", sound="fanfare")
ping("test", sound="complete")
ping("test", sound="treasure")
ping("test", sound="shotgun")
ping("test", sound="shotgun")
ping("test", sound="wilheml")
ping("test", sound="wilhelm")
ping("test", sound="wilhelm")
ping("test")
ping("test")
ping("test")
ping("test")
ping("test")
ping("test", sound="ping")
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/lda_models.Rdata")
require(tm)
require(slam)
require(topicmodels)
require(ggplot2)
logliks <- as.data.frame(as.matrix(lapply(lda.models, logLik)))
logliks$LogLikelihood<-as.numeric(logliks$V1)
View(logliks)
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/lda_models.Rdata")
logliks <- as.data.frame(as.matrix(lapply(lda.models, logLik)))
logliks$LogLikelihood<-as.numeric(logliks$V1)
logliks$K<-seq(5,30,by=1)
ggplot(logliks, aes(x=K, y=LogLikelihood)) + geom_line() + theme_bw()
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/lda_models_small.Rdata")
logliks <- as.data.frame(as.matrix(lapply(lda.models, logLik)))
logliks$LogLikelihood<-as.numeric(logliks$V1)
logliks$K<-seq(2,50,by=1)
ggplot(logliks, aes(x=K, y=LogLikelihood)) + geom_line() + theme_bw()
perplexity <- as.data.frame(as.matrix(lapply(lda.models, perplexity)))
logliks$Perplexity<-as.numeric(perplexity$V1)
ggplot(logliks, aes(x=K, y=Perplexity)) + geom_line() + theme_bw()
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/lda_models.Rdata")
logliks <- as.data.frame(as.matrix(lapply(lda.models, logLik)))
logliks$LogLikelihood<-as.numeric(logliks$V1)
logliks$K<-seq(5,30,by=1)
ggplot(logliks, aes(x=K, y=LogLikelihood)) + geom_line() + theme_bw()
perplexity <- as.data.frame(as.matrix(lapply(lda.models, perplexity)))
logliks$Perplexity<-as.numeric(perplexity$V1)
ggplot(logliks, aes(x=K, y=Perplexity)) + geom_line() + theme_bw()
source("~/Dropbox/Projects/globalization_media_freedom/analyses/intro_graphs.R")
require(knitr)
setwd("~/Dropbox/gh_projects/globalization_media_freedom/article")
warnings()
