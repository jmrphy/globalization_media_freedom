vertex.size=5,
vertex.label=NA,
vertex.label.family="mono",
vertex.label.color=hsv(h=0, s=0, v=.95, alpha=0.5),
vertex.label.cex=0.85,
edge.arrow.size=0.8,
edge.arrow.width=0.5,
edge.width=3,
edge.color=hsv(h=.35, s=1, v=.7, alpha=0.4))
title("\nWho retweets whom",
cex.main=1, col.main="gray95", family="mono")
rt_graph2 = delete.vertices(rt_graph, V(rt_graph)[ degree(rt_graph)==0 ])
V(rt_graph2)$label = NA
V(rt_graph2)$color =  rgb(1,0,0,.1)
V(rt_graph2)$size = 2
E(rt_graph2)$width = .3
E(rt_graph2)$color = rgb(.5,.5,0,.1)
par(bg="white", mar=c(1,1,1,1))
plot.igraph(rt_graph2, layout=layout.fruchterman.reingold)
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
library(ggplot2)
p<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res,
size=abs(res)))+
xlab("Betweenness Centrality")+ylab("Eigenvector Centrality")
p+geom_text()+opts(title="Key Actor Analysis for #Expressyourself")
par(bg="gray15", mar=c(1,1,1,1))
plot(rt_graph, layout=glay,
vertex.color=hsv(h=.35, s=1, v=.7, alpha=0.1),
vertex.frame.color=hsv(h=.35, s=1, v=.7, alpha=0.1),
vertex.size=5,
vertex.label=NA,
vertex.label.family="mono",
vertex.label.color=hsv(h=0, s=0, v=.95, alpha=0.5),
vertex.label.cex=0.85,
edge.arrow.size=0.8,
edge.arrow.width=0.5,
edge.width=3,
edge.color=hsv(h=.35, s=1, v=.7, alpha=0.4))
title("\nWho retweets whom",
cex.main=1, col.main="gray95", family="mono")
par(bg="gray15", mar=c(1,1,1,1))
plot(rt_graph, layout=glay,
vertex.color=hsv(h=.35, s=1, v=.7, alpha=0.1),
vertex.frame.color=hsv(h=.35, s=1, v=.7, alpha=0.1),
vertex.size=5,
vertex.label=NA,
vertex.label.family="mono",
vertex.label.color=hsv(h=0, s=0, v=.95, alpha=0.5),
vertex.label.cex=0.85,
edge.arrow.size=0.8,
edge.arrow.width=0.5,
edge.width=3,
edge.color=hsv(h=.35, s=1, v=.7, alpha=0.4))
title("Retweet Network at #PSA14",
cex.main=1, col.main="gray95", family="mono")
par(bg="gray15", mar=c(1,1,1,1))
plot(rt_graph, layout=glay,
vertex.color="gray25",
vertex.size=10,
vertex.label=ver_labs,
vertex.label.family="sans",
vertex.shape="none",
vertex.label.color=hsv(h=0, s=0, v=.95, alpha=0.5),
vertex.label.cex=0.85,
edge.arrow.size=0.8,
edge.arrow.width=0.5,
edge.width=3,
edge.color=hsv(h=.95, s=1, v=.7, alpha=0.5))
# add title
title("\nWho retweets whom",
cex.main=1, col.main="gray95")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
library(ggplot2)
p<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res,
size=abs(res)))+
xlab("Betweenness Centrality")+ylab("Eigenvector Centrality")
p+geom_text()+opts(title="Key Actor Analysis for #PSA14")
names(dm_tweets)
dm_tweets[1]
dm_tweets[1][[2]]
dm_tweets[1][2]
dm_tweets[[1]][2]
??twitteR
df<-twListToDF(dm_tweets)
View(df)
View(df)
x$date <- strptime(df$created, "%a, %d %b %Y %H:%M:%S %z", tz = "EST")
df$date <- strptime(df$created, "%a, %d %b %Y %H:%M:%S %z", tz = "EST")
View(df)
require(lubridated)
require(lubridate)
?strptime
??lubridate
View(df)
?lubridate
View(df)
df$time<-ymd_hms(df$created)
View(df)
summary(df$created)
View(df)
guess_formats(df$created)
?ymd_hms
df$time<-as.date(df$created)
df$time<-as.Date(df$created)
View(df)
?as.Date
df$time<-as.POSIXct(df$created)
View(df)
timeseries<-ggplot(data=df, aes(x=time)) + geom_bar(aes(fill=..count..), binwidth=60*30) + theme_bw() + ylab("# of Tweets") + xlab("Time")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
lab(title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=5) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=200) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=100) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=20*20) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=400) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..)) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=range/20) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=(range/20)) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60/30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
?scale_x_datetime
?date_format
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(limits=c(breaks=date_breaks("1 min"),
labels = date_format("%Y:%M:%D:%H:%M:%S"))
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(limits=c(breaks=date_breaks("1 min"),
labels = date_format(ymd_hms))
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(limits=c(breaks=date_breaks("30 min"))
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(breaks=date_breaks("30 min"))
timeseries
?scale_x_datetime
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(breaks=date_breaks("30 min")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(breaks=date_breaks("30 minutes")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf") +
scale_x_datetime(breaks=date_breaks("1 day")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="dsf")
timeseries
timeseries<-ggplot(data=df, aes(x=time)) +
geom_bar(aes(fill=..count..), binwidth=60*30) +
theme_bw() + ylab("# of Tweets") + xlab("Time") +
labs(y="# of Tweets", x="Time", title="Time-Series of #PSA14 Tweets")
timeseries
# Plot 2, more sci-fi and with no vertex labels
par(bg="gray15", mar=c(1,1,1,1))
plot(rt_graph, layout=glay,
vertex.color=hsv(h=.35, s=1, v=.7, alpha=0.1),
vertex.frame.color=hsv(h=.35, s=1, v=.7, alpha=0.1),
vertex.size=5,
vertex.label=NA,
vertex.label.family="mono",
vertex.label.color=hsv(h=0, s=0, v=.95, alpha=0.5),
vertex.label.cex=0.85,
edge.arrow.size=0.8,
edge.arrow.width=0.5,
edge.width=3,
edge.color=hsv(h=.35, s=1, v=.7, alpha=0.4))
title("Retweet Network at #PSA14",
cex.main=1, col.main="gray95", family="mono")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
library(ggplot2)
p<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res,
size=abs(res)))+
xlab("Betweenness Centrality")+ylab("Eigenvector Centrality")
p+geom_text()+opts(title="Key Actor Analysis for #PSA14")
cent<-data.frame(bet=betweenness(rt_graph),eig=evcent(rt_graph)$vector)
res<-lm(eig~bet,data=cent)$residuals
cent<-transform(cent,res=res)
library(ggplot2)
p<-ggplot(cent,aes(x=bet,y=eig,
label=rownames(cent),colour=res))+
xlab("Betweenness Centrality")+ylab("Eigenvector Centrality")
p+geom_text()+opts(title="Key Actor Analysis for #PSA14")
library(rstan)
install.packages("rstan")
rstan
??rstan
require(rstan)
install.packages('inline')
install.packages('Rcpp')
library(inline)
library(Rcpp)
src <- '
std::vector<std::string> s;
s.push_back("hello");
s.push_back("world");
return Rcpp::wrap(s);
'
hellofun <- cxxfunction(body = src, includes = '', plugin = 'Rcpp', verbose = FALSE)
cat(hellofun(), '\n')
options(repos = c(getOption("repos"), rstan = "http://wiki.rstan-repo.googlecode.com/git/"))
install.packages('rstan', type = 'source')
gc()
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/k_clusters.Rdata")
k<-200
kclusters<-kmeans(standarddtm, centers=k)
summary(kclusters)
kclusters<-kmeans(standarddtm, centers=k)
kclusters<-kmeans(standarddtm, centers=200)
k<-200
kclusters<-kmeans(kdata, centers=k)
cl<-kclusters
save(cl, file="~/Dropbox/gh_projects/uk_govt_web_archive/data/cluster_model.Rdata")
table(cl$cluster)
seed()
?set.seed
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/globalisation_corpus.Rdata")
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/cluster_model.Rdata")
table(cl$cluster)
meta(corpus[[1]], tag="Heading")
require(tm)
meta(corpus[[1]], tag="Heading")
lapply(corpus, function(x) meta(x, tag="Heading"))
headings<-lapply(corpus, function(x) meta(x, tag="Heading"))
headings<-unlist(headings)
head(headings)
headings<-as.factor(headings)
headings
summary(headings)
table(headings)
headings<-as.data.frame(table(headings))
View(headings)
require(pander)
?pander
kable(assocs)
require(knitr)
kable(assocs)
?kable
require(tm)
require(slam)
require(topicmodels)
require(ggplot2)
load("~/Dropbox/gh_projects/uk_govt_web_archive/data/lda_models.Rdata")
options(scipen=999)
logliks <- as.data.frame(as.matrix(lapply(lda.models, logLik)))
logliks$LogLikelihood<-as.numeric(logliks$V1)
logliks$K<-c(50, 100, 400)
ggplot(logliks, aes(x=K, y=LogLikelihood)) + geom_line() + theme_bw()
x1 = arima.sim(list(order=c(1,0,0), ar=.9), n=100)
x2 = arima.sim(list(order=c(1,0,0), ar=-.9), n=100)
par(mfrow=c(2,1))
plot(x1, main=(expression(AR(1)~~~phi==+.9)))      # ~ is a space and == is equal
plot(x2, main=(expression(AR(1)~~~phi==-.9)))
?arima.sim
M=1000
?rnorm
x = rnorm(M)
plot(cumsum(x), type='l')
walk<-cumsum(x)
plot(walk, type='l')
plot(walk, type='l')
plot(walk, type='l')
?cut
cut(walk, breaks=10)
breaks10<-cut(walk, breaks=10)
breaks100<-cut(walk, breaks=100)
plot(breaks10)
plot(breaks100)
M=1000
x = rnorm(M)
walk2<-cumsum(x)
lm(walk2 ~ breaks10 + breaks100)
model<-lm(walk2 ~ breaks10 + breaks100)
summary(model)
my.table <- read.table(“clipboard”, header=TRUE)
my.table <- read.table("clipboard", header=TRUE, sep="\t")
my.table <- read.table("clipboard", header=TRUE, sep="\t")
?read.table
my.table <- read.delim("clipboard", header=TRUE, sep="\t")
paste.data <- function(header=FALSE) {read.table(pipe("pbpaste"), header=header)}
paste.data()
paste.data(TRUE)
read.table(pipe("pbpaste")
)
require(psych)
?read.clipboard
read.clipboard(header=TRUE, sep='\t')
require(stargazer)
vardecomp<-read.clipboard(header=TRUE, sep='\t')
View(vardecomp)
vardecomp<-read.clipboard(header=TRUE, sep=' ')
vardecomp<-read.clipboard(header=TRUE, sep=' ')
vardecomp<-read.clipboard(header=TRUE, sep='\t')
View(vardecomp)
?read.table
read.table("s,Democracy,Trade,FDI,FPI,PressScore,
Democracy,8,.95235921,.01251201,.01385165,.00124343,.02003369,
Trade,8,.33559893,.61159264,.01521511,.00762207,.02997125,
FDI,8,.19567627,.0397477,.74293439,.0138908,.00775085,
FPI,8,.26865217,.05924319,.14617952,.52265124,.00327387,
PressScore,8,.24223829,.02537721,.0121614,.00907452,.71114858", sep",")
read.table(c("s,Democracy,Trade,FDI,FPI,PressScore,
Democracy,8,.95235921,.01251201,.01385165,.00124343,.02003369,
Trade,8,.33559893,.61159264,.01521511,.00762207,.02997125,
FDI,8,.19567627,.0397477,.74293439,.0138908,.00775085,
FPI,8,.26865217,.05924319,.14617952,.52265124,.00327387,
PressScore,8,.24223829,.02537721,.0121614,.00907452,.71114858"), sep",")
vardecomp<-read.clipboard(header=TRUE, sep=',')
View(vardecomp)
vardecomp<-read.clipboard(header=TRUE, sep=',')
View(vardecomp)
vardecomp[1:6]
stargazer(vardecomp[1:6], summary=FALSE)
stargazer(vardecomp[1:6], summary=FALSE, row.names=TRUE)
?stargazer
row.names(vardecomp)
vardecomp$Variable<-row.names(vardecomp)
stargazer(vardecomp[1:6], summary=FALSE, row.names=TRUE)
stargazer(vardecomp[1:7], summary=FALSE, row.names=TRUE)
View(vardecomp)
as.matrix(vardecomp)
stargazer(as.matrix(vardecomp), summary=FALSE, row.names=TRUE)
s,Democracy,Trade,FDI,FPI,PressScore,
Democracy,8,.95235921,.01251201,.01385165,.00124343,.02003369,
Trade,8,.33559893,.61159264,.01521511,.00762207,.02997125,
FDI,8,.19567627,.0397477,.74293439,.0138908,.00775085,
FPI,8,.26865217,.05924319,.14617952,.52265124,.00327387,
PressScore,8,.24223829,.02537721,.0121614,.00907452,.71114858
vardecomp<-read.clipboard(header=TRUE, sep=',')
View(vardecomp)
vardecomp<-read.clipboard(header=TRUE, sep=',')
vardecomp<-read.clipboard(header=TRUE, sep=',')
View(vardecomp)
?read.clipboard
?as.matrix
stargazer(vardecomp[1:6], summary=FALSE, row.names=TRUE)
vardecomp[1:6]
vardecomp<-vardecomp[1:6]
View(vardecomp)
names(vardecomp)
vardecomp$s<-row.names(vardecomp)
View(vardecomp)
stargazer(vardecomp, summary=FALSE, row.names=TRUE)
stargazer(vardecomp, summary=FALSE)
?stargazer
stargazer(vardecomp, summary=FALSE)
stargazer(vardecomp, summary=FALSE, column.labels=c("", paste(names(vardecomp))))
stargazer(vardecomp, summary=FALSE, column.labels=c(" ", paste(names(vardecomp)[2:6])))
stargazer(vardecomp, summary=FALSE, column.labels=c(" ", paste(names(vardecomp)[2:5])))
names(vardecomp)[2:5]
stargazer(vardecomp, summary=FALSE, column.labels=c(" ", names(vardecomp)[2:6])))
names(vardecomp)[2:6]
stargazer(vardecomp, summary=FALSE, column.labels=c(" ", paste(names(vardecomp)[2:6])))
stargazer(vardecomp, summary=FALSE, column.labels=c(" ", names(vardecomp)[2:6]))
stargazer(vardecomp, summary=FALSE, column.labels=c(" ", 1,2,3,4,5))
stargazer(vardecomp, summary=FALSE)
vardecomp
names(vardecomp)<-c("Variable")
names(vardecomp)
?pb
??pb
vardecomp<-read.clipboard(header=TRUE, sep=',')
vardecomp<-vardecomp[1:6]
vardecomp$s<-row.names(vardecomp)
names(vardecomp)<-c("Variable", paste(names(vardecomp)[2:6]))
names(vardecomp)
stargazer(vardecomp, summary=FALSE)
table<-"s,Democracy,Trade,FDI,FPI,PressScore,
Democracy,8,.95235921,.01251201,.01385165,.00124343,.02003369,
Trade,8,.33559893,.61159264,.01521511,.00762207,.02997125,
FDI,8,.19567627,.0397477,.74293439,.0138908,.00775085,
FPI,8,.26865217,.05924319,.14617952,.52265124,.00327387,
PressScore,8,.24223829,.02537721,.0121614,.00907452,.71114858,"
read.table(table, header=TRUE, sep",")
read.delim(table, header=TRUE, sep",")
vardecomp<-read.clipboard(header=TRUE, sep=',')
read.delim(table, header=TRUE, sep",")
vardecomp<-vardecomp[1:6]
vardecomp$s<-row.names(vardecomp)
names(vardecomp)<-c("Variable", paste(names(vardecomp)[2:6]))
stargazer(vardecomp, summary=FALSE)
?stargazer
?write.tex
?write.txt
?write
setwd("~/Dropbox/gh_projects/globalization_media_freedom/article")
write(stargazer)
write(stargazer, file="vardecomp.tex")
vard<-stargazer(vardecomp, summary=FALSE)
vard
write(vard, file="vardecomp.tex")
?stargazer
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition", style="apsr",
notes="Proportion of row variable explained by 8 lags of column variable.")
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition", style="apsr",
notes="Proportion of row variable explained by 8 lags of column variable.")
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition", style="apsr", notes="Proportion of row variable explained by 8 lags of column variable.")
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition", style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable."))
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition", style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable"))
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition", style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable"),
out="vardecomp.tex")
stargazer(vardecomp, summary=FALSE, title="Variance Decomposition for Panel VAR", style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable"),
out="vardecomp.tex")
vardecomp<-stargazer(vardecomp, summary=FALSE, title="Variance Decomposition for Panel VAR", style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable"))
write(vard, file="vardecomp.tex")
vard<-stargazer(vardecomp, summary=FALSE, title="Variance Decomposition for Panel VAR", style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable"))
write(vard, file="vardecomp.tex")
vard<-stargazer(vardecomp, summary=FALSE, title=c("Variance Decomposition for Panel VAR"), style="apsr",
notes=c("Proportion of row variable explained by 8 lags of column variable"))
vard<-stargazer(vardecomp, summary=FALSE, title=c("Variance Decomposition for Panel VAR"), style="apsr", notes=c("Proportion of row variable explained by 8 lags of column variable"))
vardecomp<-read.clipboard(header=TRUE, sep=',')
read.delim(table, header=TRUE, sep",")
vardecomp<-read.clipboard(header=TRUE, sep=',')
vardecomp<-vardecomp[1:6]
vardecomp$s<-row.names(vardecomp)
names(vardecomp)<-c("Variable", paste(names(vardecomp)[2:6]))
vard<-stargazer(vardecomp, summary=FALSE, title=c("Variance Decomposition for Panel VAR"), style="apsr", notes=c("Proportion of row variable explained by 8 lags of column variable"))
write(vard, file="vardecomp.tex")
